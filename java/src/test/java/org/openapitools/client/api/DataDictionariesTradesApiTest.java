/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PageWrapperAssetDto;
import org.openapitools.client.model.PageWrapperMarketVenueDto;
import org.openapitools.client.model.PageWrapperTradeMarketDto;
import org.openapitools.client.model.PageWrapperTradePairDto;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataDictionariesTradesApi
 */
@Disabled
public class DataDictionariesTradesApiTest {

    private final DataDictionariesTradesApi api = new DataDictionariesTradesApi();

    /**
     * Get assets
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tradeAssetsTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        PageWrapperAssetDto response = api.tradeAssets(page, size);
        // TODO: test validations
    }

    /**
     * Get market-venues
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tradeMarketVenuesTest() throws ApiException {
        Boolean active = null;
        Integer page = null;
        Integer size = null;
        PageWrapperMarketVenueDto response = api.tradeMarketVenues(active, page, size);
        // TODO: test validations
    }

    /**
     * Get markets
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tradeMarketsTest() throws ApiException {
        Boolean active = null;
        String symbol = null;
        String base = null;
        String assetType = null;
        String marketVenue = null;
        String pairId = null;
        Boolean verbose = null;
        Integer page = null;
        Integer size = null;
        PageWrapperTradeMarketDto response = api.tradeMarkets(active, symbol, base, assetType, marketVenue, pairId, verbose, page, size);
        // TODO: test validations
    }

    /**
     * Get pairs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tradePairsTest() throws ApiException {
        Boolean active = null;
        String symbol = null;
        String base = null;
        String assetType = null;
        Integer page = null;
        Integer size = null;
        PageWrapperTradePairDto response = api.tradePairs(active, symbol, base, assetType, page, size);
        // TODO: test validations
    }

}
